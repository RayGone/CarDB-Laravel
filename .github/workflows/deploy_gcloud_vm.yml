name: Deploy to GCloud Compute Enginge VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: 'Build Environment'
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository - ${{ secrets.GCLOUD_PROJECT_ID }}
        uses: actions/checkout@v4

      - name: Install PHP Dependencies
        # Have to composer install because one of the front-end package (ziggy-js) depends on PHP package
        ## NPM INSTALL will fail if PHP package is not pre-installed.
        uses: php-actions/composer@v6
        with:
          dev: no
          args: --profile --ignore-platform-reqs

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '>=20.11.0'

      - name: Install Node Depend
        run: |
          npm install
          npm install -D @types/ziggy-js

      - name: Make Frontend Build
        run: npm run build

      - name: 'Google Cloud Authentication With Service Account Key JSON'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 'latest'
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}

      # - name: 'Check GCLOUD CLI'
      #   run: 'gcloud info'

      ## Front-end packages are only dev dependencies
      ### So, rather than doing install and build in production
      #### Uploading the build files seems more cost-effective
      - name: SCP FRONT END BUILD FILES
        run: |
          echo "Uploading public/build..."
          gcloud compute scp --project=$GCLOUD_PROJECT_ID --zone=$GCLOUD_ZONE --recurse public/build  $GCLOUD_VM_INSTANCE:scp
        env:
          GCLOUD_PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
          GCLOUD_ZONE: ${{ secrets.GCLOUD_ZONE }}
          GCLOUD_VM_INSTANCE: ${{ secrets.GCLOUD_VM_INSTANCE }}

      - name: SSH and deploy
        run: |
          gcloud compute ssh --project=$GCLOUD_PROJECT_ID --zone=$GCLOUD_ZONE $GCLOUD_VM_INSTANCE --command="
            echo \"1. Switching to Project Directory\" &&
            cd /var/opt/laracar.sushmaregan.com/ &&
            echo \"2. GIT Clean Files\" &&
            sudo git restore storage *.sh bootstrap &&
            sudo git clean -fd &&
            echo \"3. GIT PULL\" &&
            sudo git pull &&
            echo \"4. Run Startup Shell\" &&
            sudo chmod +x ./actions.sh &&
            sudo ./actions.sh
          "
        env:
          GCLOUD_PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
          GCLOUD_ZONE: ${{ secrets.GCLOUD_ZONE }}
          GCLOUD_VM_INSTANCE: ${{ secrets.GCLOUD_VM_INSTANCE }}
          GCLOUD_SERVICE_ACCOUNT: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_EMAIL }}
